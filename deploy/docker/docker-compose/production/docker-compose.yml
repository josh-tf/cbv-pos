# https://computerbank.org.au - Josh Bowden 2019-04-01

# Docker-Compose file - using ver 2 for compatibility
# production containers for pos/web, db and some utils

# .env file required, see source for example.

version: '2'
services:

    cbv-prod-pos: # cbvpos production deployment
        container_name: cbv-prod-pos
        image: joshtf/cbv-php
        environment:
            - FORCE_HTTPS=${opt_force_ssl}
            - MYSQL_DB_NAME=${pos_db_name}
            - MYSQL_USERNAME=${pos_db_user}
            - MYSQL_PASSWORD=${pos_db_pass}
            - MYSQL_HOST_NAME=cbv-prod-db
            - PHP_TIMEZONE=${timezone}
            - VIRTUAL_HOST=${pos_virt_host}
            - LETSENCRYPT_HOST=${pos_le_host}
            - LETSENCRYPT_EMAIL=${pos_le_email}
            - STOCKLIST_UPDATE_URL=${stocklist_url}
        links:
                - cbv-prod-db
        expose:
                - "80"
                - "443"
        volumes:
                - uploads:/app/public/uploads
                - ./cbvpos/app:/app
        restart: always

    cbv-prod-web: # cbv main wordpress website
        container_name: cbv-prod-web
        image: joshtf/cbv-php
        environment:
            - MYSQL_DB_NAME=${web_db_name}
            - MYSQL_USERNAME=${web_db_user}
            - MYSQL_PASSWORD=${web_db_pass}
            - MYSQL_HOST_NAME=cbv-prod-db
            - POS_MYSQL_DB_NAME=${pos_db_name}
            - POS_MYSQL_USERNAME=${pos_db_user}
            - POS_MYSQL_PASSWORD=${pos_db_pass}
            - PHP_TIMEZONE=${timezone}
            - VIRTUAL_HOST=${web_virt_host}
            - LETSENCRYPT_HOST=${web_le_host}
            - LETSENCRYPT_EMAIL=${web_le_email}
            - WEBSITE_URL=${web_url}
        links:
                - cbv-prod-db
        expose:
                - "80"
                - "443"
        volumes:
                - ./web:/app/public
                - ./conf/php.ini:/usr/local/etc/php/conf.d/uploads.ini
        restart: always

    cbv-prod-db: # MariaDB for wordpress and cbvpos
        container_name: cbv-prod-db
        image: mysql:5.7
        environment:
                - MYSQL_ROOT_PASSWORD=${sql_db_root}
        ports:
                - "3306:3306"
        volumes:
                - ./db:/docker-entrypoint-initdb.d
                - ./db_data:/var/lib/mysql
        restart: always

    cbv-prod-pma: # PHPMyAdmin for database management
        container_name: cbv-prod-pma
        image: phpmyadmin/phpmyadmin
        environment:
                - PMA_HOST=cbv-prod-db
        links:
                - cbv-prod-db
        ports:
                - "8080:80"
        restart: always

    cbv-prod-nginx-proxy: # nginx reverse proxy for mapping hostname to container
        container_name: cbv-prod-nginx-proxy
        image: jwilder/nginx-proxy
        ports:
                - "80:80"
                - "443:443"
        volumes:
                - /etc/nginx/certs
                - /etc/nginx/vhost.d
                - /usr/share/nginx/html
                - /var/run/docker.sock:/tmp/docker.sock:ro
                - ./conf/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
        restart: always

    cbv-prod-ssl-certs: # letsencrypt SSL generator for containers
        container_name: cbv-prod-ssl-certs
        image: jrcs/letsencrypt-nginx-proxy-companion
        volumes:
                - /var/run/docker.sock:/var/run/docker.sock:ro
        volumes_from:
                - cbv-prod-nginx-proxy
        restart: always

    node-portainer: # portainer instance for docker management
        container_name: node-portainer
        image: portainer/portainer
        command: -H unix:///var/run/docker.sock
        ports:
                - "9000:9000"
        volumes:
                - portainer_data:/data
                - /var/run/docker.sock:/var/run/docker.sock
        restart: always

# Build containers
#   - build composer installs codeigniter
#   - build-php installs php modules
#   - build-nodejs installs node and bower modules

    cbv-dev-build-composer:
        container_name: cbv-prod-pos-build-composer
        image: composer/composer
        command: "install"
        volumes:
                - ./cbvpos/app:/app

    cbvposdev-build-php:
        container_name: cbv-prod-pos-build-php
        image: lucor/php7-cli
        command: "php /app/deploy/scripts/install.php translations develop"
        volumes:
                - ./cbvpos:/app

    cbvposdev-build-nodejs:
        container_name: cbv-prod-pos-build-nodejs
        image: digitallyseamless/nodejs-bower-grunt
        command: bash -c "cd /app && npm install && bower install"
        volumes:
                - ./cbvpos/app:/app

# Volumes
#   - uploads for cbvpos use

volumes:
    uploads:
        driver: local
    portainer_data:
